spring:
  application:
    name: xiaozhi-medical-LangChain4j
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  profiles:
    active: dev
  data:
    mongodb:
      uri: ${spring.data.mongodb.uri}
  datasource:
    username: ${spring.datasource.username}
    url: ${spring.datasource.url}
    password: ${spring.datasource.password}
    driver-class-name: com.mysql.cj.jdbc.Driver


server:
  port: 8080
  address: localhost

logging:
  level:
    org.springframework.jdbc.support.JdbcTransactionManager: debug
    pers:
      lwb:
        mapper: debug
        service: info
        controller: info

# springdoc-openapi 项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  api-docs:
    path: /v3/api-docs
    enabled: true
    version: openapi_3_0
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: pers.lwb.controller
# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn

langchain4j:
  open-ai:
    chat-model:
      api-key: ${langchain4j.open-ai.chat-model.api-key}
      model-name: ${langchain4j.open-ai.chat-model.model-name}
      log-requests: true
      log-responses: true
      base-url: ${langchain4j.open-ai.chat-model.base-url}
#      strict-json-schema: true

  ollama:
    chat-model:
      base-url: ${langchain4j.ollama.chat-model.base-url}
      model-name: ${langchain4j.ollama.chat-model.model-name}
      # 用于控制回答的扩散性，值越高回答动态性和扩散性更强
      temperature: ${langchain4j.ollama.chat-model.temperature}
      # 回复响应超时时间
      timeout: ${langchain4j.ollama.chat-model.timeout}
#      format: JSON

  # 阿里大模型
  community:
    dashscope:
        chat-model:
          api-key: ${langchain4j.community.dashscope.chat-model.api-key}
          model-name: ${langchain4j.community.dashscope.chat-model.model-name}
        embedding-model:
          api-key: ${langchain4j.community.dashscope.embedding-model.api-key}
          model-name: ${langchain4j.community.dashscope.embedding-model.model-name}
        streaming-chat-model:
          api-key: ${langchain4j.community.dashscope.streaming-chat-model.api-key}
          model-name: ${langchain4j.community.dashscope.streaming-chat-model.model-name}

aliyun:
  image-model:
    api-key: ${aliyun.image-model.api-key}
    model-name: ${aliyun.image-model.model-name}

pinecone:
  api-key: ${pinecone.api-key}
  index-name: ${pinecone.index-name}
  namespace: ${pinecone.namespace}
  cloud: ${pinecone.cloud}
  region: ${pinecone.region}

mybatis-plus:
  configuration:
    # 开启 SQL 日志打印
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true


